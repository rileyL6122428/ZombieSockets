{"version":3,"sources":["webpack/bootstrap 469f9e3fc1c0f4923ee1","./client/scripts/canvas_render_script.js","./client/scripts/utils/socket_initializer.js","./client/scripts/utils/player_input_handler.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B,wCAAwC,EAAE;AACxE;AACA,EAAC;;AAED,iDAAgD,yBAAyB,EAAE;;AAE3E;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,qCAAoC,8BAA8B,EAAE;AACpE;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAoC,sBAAsB;AAC1D,MAAK;AACL;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 469f9e3fc1c0f4923ee1\n **/","var canvas = document.getElementById(\"canvas\");\nvar ctx = canvas.getContext('2d');\nvar sock = io()\nvar socketInitializer = require('./utils/socket_initializer.js');\nvar inputHandler = require('./utils/player_input_handler.js');\n\nvar positions = [[-100, 0], [-100, 0]];\nvar renderID = setInterval(function() {\n  ctx.clearRect(0, 0, 600, 500);\n  positions.forEach((pos) => { ctx.fillRect(pos[0], pos[1], 100, 100); });\n  inputHandler.handleInput(sock);\n}, 1000/30);\n\nwindow.addEventListener(\"beforeunload\", (e) => { clearInterval(renderID); });\n\nsocketInitializer.initializeSockets(sock, positions);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/scripts/canvas_render_script.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = {\n  initializeSockets: function (sock, positions) {\n    this.setupHandshakeReciever(sock);\n    this.setupNotificationReciever(sock);\n    this.setupPositionReciever(sock, positions);\n  },\n\n  setupPositionReciever: function (sock, positions) {\n    sock.on('position update', updatePositions);\n    function updatePositions(posArr) {\n      posArr.forEach((pos, idx) => { positions[idx] = posArr[idx]; });\n    }\n  },\n\n  setupHandshakeReciever: function (sock) {\n    sock.on('handShake', onHandshake);\n    function onHandshake(status) {\n      var handShake = document.getElementById(\"hand-shake\");\n      handShake.innerHTML = status;\n    }\n  },\n\n  setupNotificationReciever: function (sock) {\n    sock.on('msg', onMsg);\n    function onMsg(msg) {\n      var status = document.getElementById(\"server-messages\");\n      status.innerHTML = msg;\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/scripts/utils/socket_initializer.js\n ** module id = 1\n ** module chunks = 0\n **/","var _inputSetup = [\n  ['d', 'move right'],\n  ['a', 'move left'],\n  ['s', 'move down'],\n  ['w', 'move up']\n]\n\nmodule.exports = {\n  handleInput: function(sock) {\n    _inputSetup.forEach(function(inputs) {\n      if(key.isPressed(inputs[0])) {ã€€sock.emit(inputs[1]); }\n    });\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/scripts/utils/player_input_handler.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}