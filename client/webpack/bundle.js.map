{"version":3,"sources":["webpack/bootstrap 159e2f5ae616a945d84b","./client/canvas_render_script.js","./client/game_logic/game_script.js","./client/matchmaking_logic/matchmaking_script.js","./client/matchmaking_logic/utils/mm_renderer.js","./client/matchmaking_logic/utils/mm_data_store.js","./client/matchmaking_logic/utils/mm_input_handler.js","./client/general_utils/constants.js","./client/purgatory/purgatory_script.js","./client/purgatory/utils/purg_renderer.js","./client/client_module/module_runner.js","./client/client_module/interval_id_regulator.js","./client/client_module/client_module.js","./client/purgatory/utils/purg_data_store.js","./server_side_logic/utils/constants.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;;;;;;AClCJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;;;;;;ACrBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAqB,SAAS;AAC9B,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,kCAAiC,eAAe;AAChD;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,6BAA6B;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACpFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA,0BAAyB,eAAe;AACxC,0BAAyB,gBAAgB;AACzC,0BAAyB,mBAAmB;;;;;;;ACtB5C;AACA;;AAEA;AACA,0BAAyB,wBAAwB,EAAE;;AAEnD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACfA;;AAEA;;AAEA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;;;;;;ACXA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC1BA;;AAEA;AACA,0BAAyB,wCAAwC,EAAE;;AAEnE,0BAAyB,qBAAqB;AAC9C;;AAEA;AACA;AACA;;;;;;;ACVA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 159e2f5ae616a945d84b\n **/","var canvas = document.getElementById(\"canvas\"),\n    ctx    = canvas.getContext(\"2d\"),\n    sock   = io();\n\nvar GameScript  = require('./game_logic/game_script.js'),\n    MMScript    = require('./matchmaking_logic/matchmaking_script.js'),\n    PurgScript  = require('./purgatory/purgatory_script.js'),\n    Constants   = require('./general_utils/constants');\n\nvar ModuleRunner = require('./client_module/module_runner'),\n    ClientModule = require('./client_module/client_module');\n\n    // NOTE PROBALY WRAP THIS IN A GIANT INIT METHOD\nConstants.initDimensions(canvas);\nsock.on('share game total', Constants.initGameTotal);\n// NOTE END INIT WRAPPING\n\nModuleRunner.addModules([\n  new ClientModule(MMScript, 'To Matchmaking', sock, ctx),\n  new ClientModule(PurgScript, 'To Purgatory', sock, ctx),\n  new ClientModule(GameScript, 'To Game', sock, ctx)\n]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/canvas_render_script.js\n ** module id = 0\n ** module chunks = 0\n **/","// var Purgatory = require('./purgatory/purgatory');\n\nvar GameScript = {\n\n  init: function (sock) {\n    // setStateListeners\n  },\n\n  run: function () {\n  }\n};\n\nmodule.exports = GameScript;\n\n// var ctx = canvas.getContext('2d');\n// var halfWidth = (canvas.clientWidth - 30) / 2;\n// var halfHeight = (canvas.clientHeight - 30) / 2;\n\n// var socketInitializer = require('./utils/socket_initializer.js');\n// var inputHandler = require('./utils/player_input_handler.js');\n// var GameRenderer = require('./rendering/game_renderer.js');\n// var MatchmakingRenderer = require('./rendering/matchmaking_renderer.js');\n\n// var playerPositions = [[0, 0], [0, 0]];\n\n// socketInitializer.initializeSockets(sock, playerPositions);\n// GameRenderer.setSocketListeners(sock);\n// inputHandler.registerGameOverCB(sock);\n\n// var renderID = setInterval(function() {\n  // if(GameRenderer.readyToRender()) {\n    // GameRenderer.renderCanvasEl(ctx, playerPositions, halfWidth, halfHeight, sock);\n    // inputHandler.handleInput(sock);\n  // }\n// }, 1000/30);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/game_logic/game_script.js\n ** module id = 1\n ** module chunks = 0\n **/","var Renderer = require('./utils/mm_renderer.js');\nvar Store = require('./utils/mm_data_store.js');\nvar InputHandler = require('./utils/mm_input_handler.js');\nvar sock;\n\nvar MatchmakingScript = {\n  init: function (sock) {\n    Store.initialzeDataReceivers(sock);\n    InputHandler.init(sock);\n  },\n\n  run: function (ctx) {\n    var intervalId = setInterval(function() {\n      Renderer.render(ctx);\n      InputHandler.handleInput();\n    }, 1000 / 30);\n\n    return intervalId;\n  }\n};\n\nmodule.exports = MatchmakingScript;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/matchmaking_logic/matchmaking_script.js\n ** module id = 2\n ** module chunks = 0\n **/","var Store = require('./mm_data_store.js');\nvar InputHandler = require('./mm_input_handler.js');\nvar Constants = require('../../general_utils/constants');\n\nvar MatchmakingRenderer = {\n  render: function (ctx) {\n    ctx.clearRect(0, 0, Constants.CANVAS_WIDTH(), Constants.CANVAS_HEIGHT());\n    ctx.fillStyle = \"black\"\n\n    drawPlayerWaitingDisplay(ctx);\n\n    for (var row = 0; row < 2; row++) {\n      for (var col = 0; col < 2; col++) {\n        drawGameButton(ctx, row, col);\n      }\n    }\n  }\n};\n\nfunction drawPlayerWaitingDisplay(ctx) {\n  ctx.font = \"22px serif\";\n  ctx.fillText(\"Players Waiting: \" + Store.waitingPlayerTotal(), 70, 50);\n}\n\nfunction drawGameButton(ctx, row, col) {\n  var gameNum = 1 + row * 2 + col;\n  var drawX = col * 210 + 30;\n  var drawY = row * 150 + 100;\n\n  ctx.font = \"22px serif\";\n  ctx.fillText(\"Game \" + gameNum, drawX, drawY);\n\n  drawCursor(gameNum, drawX, drawY, ctx);\n\n  ctx.font = \"17px serif\";\n  ctx.fillText(\n    \"Players: \" + Store.getGamePlayerTotal(gameNum - 1),\n    drawX,\n    drawY + 20\n  );\n}\n\nfunction drawCursor(gameNum, drawX, drawY, ctx) {\n  if(gameNum - 1 === InputHandler.selectedGameIdx()) {\n    ctx.beginPath();\n    ctx.moveTo(drawX + 80, drawY);\n    ctx.lineTo(drawX + 95, drawY + 10);\n    ctx.lineTo(drawX + 95, drawY - 10);\n    ctx.fill();\n  }\n}\n\nmodule.exports = MatchmakingRenderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/matchmaking_logic/utils/mm_renderer.js\n ** module id = 3\n ** module chunks = 0\n **/","// DATA WE NEED TO STORE\n// 1) PLAYER TOTALS\n// 2) Zombie TOTAL / per game\n// 3) Human Total / per game\n// 4) Game start time, or last endtime\n// 5) number of players waiting\n\nvar _data = {};\n\nmodule.exports = {\n  initialzeDataReceivers: function (sock) {\n    sock.on('mm update', receiveData);\n  },\n\n  waitingPlayerTotal: function() {\n    return _data.waitingPlayerTotal\n  },\n\n  getGamePlayerTotal: function (idx) {\n    return _data.playerTotals[idx];\n  }\n};\n\nfunction receiveData(data) {\n  _data = data;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/matchmaking_logic/utils/mm_data_store.js\n ** module id = 4\n ** module chunks = 0\n **/","var Constants = require('../../general_utils/constants.js');\n\nvar _cursorPos = [0, 0];\nvar _readyToMoveCursor = true;\nvar _readyToChooseGame = true;\nvar _sock;\n\nmodule.exports = {\n  init: function (sock) {\n    _sock = sock;\n  },\n\n  handleInput: function () {\n    this.handleCursorScroll();\n    this.handleGameSelection();\n  },\n\n  handleCursorScroll: function() {\n    if(_readyToMoveCursor) {\n      scrollOnInput();\n    }\n  },\n\n  handleGameSelection: function() {\n    var idx = this.selectedGameIdx();\n    if(key.isPressed('enter') && _readyToChooseGame) {\n      _sock.emit('select game', { gameIdx: idx });\n      _readyToChooseGame = false;\n    }\n  },\n\n  selectedGameIdx: function () {\n    return (\n      _cursorPos[0] * Math.floor(Constants.GAME_TOTAL() / 2) + _cursorPos[1]\n    );\n  }\n}\n\nvar directionsAndCBs = [\n  [\"right\", scrollRight],\n  [\"left\", scrollLeft],\n  [\"up\", scrollUp],\n  [\"down\", scrollDown]\n];\n\nfunction scrollOnInput() {\n  for (var i = 0; i < directionsAndCBs.length; i++) {\n    var direction = directionsAndCBs[i][0];\n    var cb = directionsAndCBs[i][1];\n\n    if(key.isPressed(direction)) {\n      cb();\n      _readyToMoveCursor = false;\n\n      setTimeout(function() {\n        _readyToMoveCursor = true\n      }, Constants.MM_SCROLL_COOLDOWN);\n      break;\n    }\n  }\n}\n\nfunction scrollRight() {\n  _cursorPos[1] = (_cursorPos[1] - 1) % Math.floor(Constants.GAME_TOTAL() / 2);\n\n  if(_cursorPos[1] === -1) {\n    _cursorPos[1] = 1;\n  }\n}\n\nfunction scrollLeft() {\n  _cursorPos[1] = (_cursorPos[1] + 1) % Math.floor(Constants.GAME_TOTAL() / 2);\n}\n\nfunction scrollUp() {\n  _cursorPos[0] = (_cursorPos[0] + 1) % 2;\n}\n\nfunction scrollDown() {\n  _cursorPos[0] = (_cursorPos[0] - 1) % 2;\n\n  if(_cursorPos[0] === -1) {\n    _cursorPos[0] = Math.floor(Constants.GAME_TOTAL() / 2) - 1;\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/matchmaking_logic/utils/mm_input_handler.js\n ** module id = 5\n ** module chunks = 0\n **/","var _width;\nvar _height;\nvar _gameTotal;\n\nmodule.exports = {\n  CANVAS_WIDTH: getWidth,\n  CANVAS_HEIGHT: getHeight,\n  MM_SCROLL_COOLDOWN: 150,\n  GAME_TOTAL: getGameTotal,\n\n  initDimensions: function(canvas) {\n    _width = canvas.width;\n    _height = canvas.height;\n  },\n\n  initGameTotal: function(total) {\n    _gameTotal = total;\n  }\n};\n\nfunction getWidth()     { return _width;     }\nfunction getHeight()    { return _height;    }\nfunction getGameTotal() { return _gameTotal; }\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/general_utils/constants.js\n ** module id = 6\n ** module chunks = 0\n **/","var Renderer = require('./utils/purg_renderer.js');\nvar Store = require('./utils/purg_data_store.js');\n\nmodule.exports = {\n  init: function (sock) { Store.initialize(sock); },\n\n  run: function(ctx) {\n    var intervalId = setInterval(function () {\n      Renderer.render(ctx);\n    }, 1000 / 30);\n\n    return intervalId;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/purgatory/purgatory_script.js\n ** module id = 7\n ** module chunks = 0\n **/","var Constants = require(\"../../general_utils/constants\");\nvar Store = require('./purg_data_store');\nvar Constants2 = require('../../../server_side_logic/utils/constants');\n\nvar PurgatoryRenderer = {\n  render: function (ctx) {\n    var playerTotal = Store.getPlayerTotal();\n\n    ctx.clearRect(0, 0, Constants.CANVAS_WIDTH(), Constants.CANVAS_HEIGHT());\n    ctx.fillText(\"This is the Purgatory Component\", 70, 50);\n    ctx.fillText(\"Player Count: \" + playerTotal, 70, 100);\n    ctx.fillText(\"Players needed: \" + (Constants2.PLAYER_TOTAL - playerTotal), 70, 150);\n  }\n}\n\nmodule.exports = PurgatoryRenderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/purgatory/utils/purg_renderer.js\n ** module id = 8\n ** module chunks = 0\n **/","var IDRegulator = require('./interval_id_regulator.js');\n\nvar _modules = [];\n\nmodule.exports = {\n  addModules: function (modules) {\n    for (var i = 0; i < modules.length; i++) {\n      _modules.push(modules[i]);\n      _modules[i].init();\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/client_module/module_runner.js\n ** module id = 9\n ** module chunks = 0\n **/","var _ids = [];\n\nvar Regulator = {\n  clearAllIntervals: function () {\n    while(_ids.length > 0) {\n      clearInterval(_ids.pop());\n    }\n  },\n\n  store: function (id) {\n    _ids.push(id);\n  }\n};\n\nwindow.addEventListener(\"beforeunload\", (e) => {\n  // TODO CLEAR INTERVALS\n  Regulator.clearAllIntervals();\n});\n\nmodule.exports = Regulator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/client_module/interval_id_regulator.js\n ** module id = 10\n ** module chunks = 0\n **/","var IDRegulator = require('./interval_id_regulator.js');\n\nfunction ClientModule(script, sockSignalString, sock, ctx) {\n  this.script = script;\n  this.signalString = sockSignalString;\n  this.sock = sock;\n  this.ctx = ctx;\n}\n\nClientModule.prototype.init = function () {\n  var signal    = this.signalString,\n      runScript = this.runScript.bind(this);\n\n  this.sock.on(signal, runScript);\n}\n\nClientModule.prototype.runScript = function (script) {\n  IDRegulator.clearAllIntervals();\n\n  this.script.init(this.sock);\n  //NOTE Should I clear sock listeners when leaving a module???\n  var intervalId = this.script.run(this.ctx);\n\n  IDRegulator.store(intervalId);\n};\n\nmodule.exports = ClientModule;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/client_module/client_module.js\n ** module id = 11\n ** module chunks = 0\n **/","var _playerTotal = 0;\n\nmodule.exports = {\n  initialize: (sock) => { sock.on('purg update', setPlayerTotal); },\n\n  getPlayerTotal: () => { return _playerTotal; }\n};\n\nfunction setPlayerTotal(data) {\n  _playerTotal = data.playerTotal;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/purgatory/utils/purg_data_store.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = {\n  PLAYER_TOTAL: 4,\n  GAME_TOTAL: 4\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./server_side_logic/utils/constants.js\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""}